# Connection settings
listen_addresses = '*'      # Listen on all available interfaces
max_connections = 100       # Maximum number of client connections

# Performance settings for development on ZFS
fsync = off                      # Skip fsync since we have ZFS snapshots
synchronous_commit = off         # Don't wait for WAL writes
full_page_writes = off          # Safe to disable with ZFS snapshots

# Aggressive background writer settings
# bgwriter_delay = 10ms           # More frequent writes
# bgwriter_lru_multiplier = 10.0  # Much more aggressive cleaning
# bgwriter_lru_maxpages = 1000    # Process more pages per round

# Memory settings for HAL9000 (64GB RAM) - Unrestricted
# shared_buffers = 16GB           # 25% of RAM for shared buffer pool
effective_cache_size = 48GB     # 75% of RAM for OS cache estimation
maintenance_work_mem = 16GB     # Very high for materialized view refresh
work_mem = 8GB                  # Large work_mem for complex queries
# huge_pages = try                # Try to use huge pages if available
# autovacuum_work_mem = 4GB       # Increased memory for autovacuum
temp_buffers = 1GB             # Large temp operations
# max_stack_depth = '7MB'         # Maximum allowed by container stack limit

# Memory overcommit settings
# max_worker_processes = 32             # More background workers

# Additional memory settings
# temp_file_limit = -1            # No limit on temp file size
# vacuum_cost_delay = 0           # No throttling of cleanup processes

# Query planner settings for large tables
random_page_cost = 1.1          # Lower because ZFS has good random read perf
effective_io_concurrency = 200  # Higher IO concurrency for ZFS
# cpu_tuple_cost = 0.03          # Bias towards index scans (vs sequential)
# default_statistics_target = 500 # Better statistics for large tables

# Parallel query settings
max_parallel_workers_per_gather = 2  # Use more parallel workers
max_parallel_maintenance_workers = 2  # Parallel maintenance operations
# max_parallel_workers = 16            # Total parallel workers
parallel_leader_participation = on   # Leader also does processing

# Checkpoint and WAL settings
checkpoint_timeout = '1h'       # Long intervals between checkpoints
max_wal_size = '32GB'          # Larger WAL size for better performance
min_wal_size = '16GB'          # Keep WAL files for potential recovery
checkpoint_completion_target = 0.9  # Spread checkpoint writes

# WAL Archiving and Recovery Settings
wal_level = replica             # Needed for replication
archive_mode = off              # Disable archiving (this is a dev replica)
archive_command = '/bin/true'   # No-op command (archiving disabled)
restore_command = 'gunzip -c /var/lib/postgresql/archive/%f.gz > %p'  # Recovery command for compressed WAL files
recovery_target_timeline = 'latest'  # Follow the latest timeline

# Autovacuum settings for large tables
# autovacuum_vacuum_scale_factor = 0.1   # Vacuum after 10% changes
# autovacuum_analyze_scale_factor = 0.05 # Analyze after 5% changes
# autovacuum_vacuum_cost_limit = 2000    # More aggressive vacuum
# autovacuum_max_workers = 4             # More vacuum workers

# Materialized view specific settings
# jit = on                            # Enable JIT for complex queries
# constraint_exclusion = on           # Better partition pruning
# default_statistics_target = 1000    # Even more stats for mat views

# Logging configuration
log_destination = 'stderr'
logging_collector = off

# What to log
log_statement = 'all'           # Log all SQL statements (query logging enabled)
log_min_duration_statement = 0   # Log all statement durations
log_checkpoints = on            # Log checkpoint information
log_connections = on            # Log all connections
log_disconnections = on         # Log all disconnections
log_lock_waits = on            # Log long lock waits
log_temp_files = 0             # Log all temp files

# Log format
log_timezone = 'UTC'
log_line_prefix = '%t [%p] %u@%d '  # timestamp [pid] user@database
log_error_verbosity = 'default'     # terse, default, or verbose

# Developer options
log_duration = off              # Don't log statement duration as a separate line
log_min_error_statement = 'error'  # Log SQL that caused errors
